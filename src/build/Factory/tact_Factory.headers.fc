;;
;; Header files for Factory
;; NOTE: declarations are sorted for optimal order
;;

;; __tact_verify_address
slice __tact_verify_address(slice address) impure inline;

;; __tact_load_address
(slice, slice) __tact_load_address(slice cs) inline;

;; __tact_store_address
builder __tact_store_address(builder b, slice address) inline;

;; __tact_create_address
slice __tact_create_address(int chain, int hash) inline;

;; __tact_compute_contract_address
slice __tact_compute_contract_address(int chain, cell code, cell data) inline;

;; __tact_my_balance
int __tact_my_balance() inline;

;; __tact_not_null
forall X -> X __tact_not_null(X x) impure inline;

;; __tact_context_get
(int, slice, int, slice) __tact_context_get() inline;

;; __tact_context_get_sender
slice __tact_context_get_sender() inline;

;; __tact_store_bool
builder __tact_store_bool(builder b, int v) inline;

;; __tact_dict_set_slice_slice
(cell, ()) __tact_dict_set_slice_slice(cell d, int kl, slice k, slice v) inline;

;; __tact_dict_get_slice_slice
slice __tact_dict_get_slice_slice(cell d, int kl, slice k) inline;

;; __tact_slice_eq_bits
int __tact_slice_eq_bits(slice a, slice b) inline;

;; __tact_dict_set_code
cell __tact_dict_set_code(cell dict, int id, cell code) inline;

;; __tact_dict_get_code
cell __tact_dict_get_code(cell dict, int id) inline;

;; $Deploy$_load
(slice, ((int))) $Deploy$_load(slice sc_0) inline;

;; $DeployOk$_store
builder $DeployOk$_store(builder build_0, (int) v) inline;

;; $DeployOk$_store_cell
cell $DeployOk$_store_cell((int) v) inline;

;; $Mint$_store
builder $Mint$_store(builder build_0, tuple v) inline;

;; $Mint$_store_cell
cell $Mint$_store_cell(tuple v) inline;

;; $Buy$_store
builder $Buy$_store(builder build_0, (int, int, slice, slice, slice, slice, slice) v) inline_ref;

;; $Buy$_store_cell
cell $Buy$_store_cell((int, int, slice, slice, slice, slice, slice) v) inline;

;; $BuyCall$_load
(slice, ((int, int, slice, slice))) $BuyCall$_load(slice sc_0) inline;

;; $SellCall$_load
(slice, ((slice, slice, int, int))) $SellCall$_load(slice sc_0) inline;

;; $Sell$_store
builder $Sell$_store(builder build_0, (slice, slice, slice, slice, int, int, slice) v) inline_ref;

;; $Sell$_store_cell
cell $Sell$_store_cell((slice, slice, slice, slice, int, int, slice) v) inline;

;; $CreateEvent$_store
builder $CreateEvent$_store(builder build_0, (cell, slice, slice) v) inline;

;; $CreateEvent$_store_cell
cell $CreateEvent$_store_cell((cell, slice, slice) v) inline;

;; $DeployCurveParams$_load
(slice, ((cell))) $DeployCurveParams$_load(slice sc_0) inline;

;; $Factory$_store
builder $Factory$_store(builder build_0, (slice, slice, cell, int) v) inline;

;; $Factory$_load
(slice, ((slice, slice, cell, int))) $Factory$_load(slice sc_0) inline;

;; $StateInit$_not_null
((cell, cell)) $StateInit$_not_null(tuple v) inline;

;; $StateInit$_to_tuple
tuple $StateInit$_to_tuple(((cell, cell)) v) inline;

;; $StateInit$_to_external
tuple $StateInit$_to_external(((cell, cell)) v) inline;

;; $BondingCurve$init$_store
builder $BondingCurve$init$_store(builder build_0, (slice, cell) v) inline;

;; $Factory$init$_load
(slice, ((slice))) $Factory$init$_load(slice sc_0) inline;

;; $Factory$_contract_init
(slice, slice, cell, int) $Factory$_contract_init(slice $treasury) impure inline_ref;

;; $Factory$_contract_load
(slice, slice, cell, int) $Factory$_contract_load() impure inline_ref;

;; $Factory$_contract_store
() $Factory$_contract_store((slice, slice, cell, int) v) impure inline;

;; $global_contractAddress
slice $global_contractAddress((cell, cell) $s) impure inline;

;; $global_send
() $global_send((int, slice, int, int, cell, cell, cell) $params) impure inline_ref;

;; $global_emit
() $global_emit(cell $body) impure inline;

;; $SendParameters$_constructor_bounce_to_value_mode_body_code_data
((int, slice, int, int, cell, cell, cell)) $SendParameters$_constructor_bounce_to_value_mode_body_code_data(int $bounce, slice $to, int $value, int $mode, cell $body, cell $code, cell $data) inline;

;; $BondingCurve$_init_child
(cell, cell) $BondingCurve$_init_child(cell sys', slice $jettonCreator, cell $content) inline_ref;

;; $Factory$_fun_getOrUpdateReferrer
((slice, slice, cell, int), slice) $Factory$_fun_getOrUpdateReferrer((slice, slice, cell, int) $self, slice $user, slice $referrer, int $shouldUpdate) impure inline_ref;

;; $Factory$_fun_balance
((slice, slice, cell, int), int) $Factory$_fun_balance((slice, slice, cell, int) $self) impure inline_ref;

;; $Factory$_fun_getBondingCurveInit
((slice, slice, cell, int), (cell, cell)) $Factory$_fun_getBondingCurveInit((slice, slice, cell, int) $self, slice $creator, cell $content) impure inline_ref;

;; $Factory$_fun_getReferrer
((slice, slice, cell, int), slice) $Factory$_fun_getReferrer((slice, slice, cell, int) $self, slice $user, slice $referrer) impure inline_ref;

;; $Factory$_fun_forward
((slice, slice, cell, int), ()) $Factory$_fun_forward((slice, slice, cell, int) $self, slice $to, cell $body, int $bounce, tuple $init) impure inline_ref;

;; $Factory$_fun_notify
((slice, slice, cell, int), ()) $Factory$_fun_notify((slice, slice, cell, int) $self, cell $body) impure inline;

;; $SendParameters$_constructor_to_value_mode_code_data_body
((int, slice, int, int, cell, cell, cell)) $SendParameters$_constructor_to_value_mode_code_data_body(slice $to, int $value, int $mode, cell $code, cell $data, cell $body) inline;

;; $Mint$_constructor_
(tuple) $Mint$_constructor_() inline;

;; $CreateEvent$_constructor_content_jetton_creator
((cell, slice, slice)) $CreateEvent$_constructor_content_jetton_creator(cell $content, slice $jetton, slice $creator) inline;

;; $SendParameters$_constructor_to_value_mode_body
((int, slice, int, int, cell, cell, cell)) $SendParameters$_constructor_to_value_mode_body(slice $to, int $value, int $mode, cell $body) inline;

;; $Buy$_constructor_tonAmount_minOut_referrer_referrerDl1_referrerDl2_treasury_trader
((int, int, slice, slice, slice, slice, slice)) $Buy$_constructor_tonAmount_minOut_referrer_referrerDl1_referrerDl2_treasury_trader(int $tonAmount, int $minOut, slice $referrer, slice $referrerDl1, slice $referrerDl2, slice $treasury, slice $trader) inline;

;; $Sell$_constructor_jettonAmount_minTonOut_referrer_referrerDl1_referrerDl2_treasury_trader
((slice, slice, slice, slice, int, int, slice)) $Sell$_constructor_jettonAmount_minTonOut_referrer_referrerDl1_referrerDl2_treasury_trader(int $jettonAmount, int $minTonOut, slice $referrer, slice $referrerDl1, slice $referrerDl2, slice $treasury, slice $trader) inline;

;; $DeployOk$_constructor_queryId
((int)) $DeployOk$_constructor_queryId(int $queryId) inline;
